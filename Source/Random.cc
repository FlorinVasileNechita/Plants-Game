////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
//                                                                            //
//                        (C) 2011-2013  David Krutsko                        //
//                        See LICENSE.md for copyright                        //
//                                                                            //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////

//----------------------------------------------------------------------------//
// Prefaces                                                                   //
//----------------------------------------------------------------------------//

#include "Random.h"
#include "mtrand.h"

#include <ctime>

static MTRand_closed rand ((unsigned long) time (0));



//----------------------------------------------------------------------------//
// Globals                                                             Random //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////
/// <summary> Generates a pseudo random integer between [0, max]. </summary>

qint32 Random (qint32 pMax)
{
	return (int) (rand() * pMax);
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> Generates a pseudo random integer between [pMin, pMax]. </summary>
qint32 Random (qint32 pMin, qint32 pMax)
{
	return (int) (rand() * (pMax - pMin)) + pMin;
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

float Random (float pMax)
{
	return (float) (rand() * pMax);
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

float Random (float pMin, float pMax)
{
	return (float) (rand() * (pMax - pMin)) + pMin;
}
