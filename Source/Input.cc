////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
//                                                                            //
//                        (C) 2011-2013  David Krutsko                        //
//                        See LICENSE.md for copyright                        //
//                                                                            //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////

//----------------------------------------------------------------------------//
// Prefaces                                                                   //
//----------------------------------------------------------------------------//

#include <SDL.h>
#include "Input.h"



//----------------------------------------------------------------------------//
// Constructors                                                      Keyboard //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////
/// <summary> Constructor instantiating this class. </summary>

Keyboard::Keyboard (void)
{
	mKeys = NULL;
}



//----------------------------------------------------------------------------//
// Static                                                            Keyboard //
//----------------------------------------------------------------------------//

Keyboard Keyboard::mState;

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

Keyboard *Keyboard::State (void)
{
	mState.mKeys = SDL_GetKeyState (NULL);
	return &mState;
}



//----------------------------------------------------------------------------//
// Operators                                                         Keyboard //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

bool Keyboard::operator [] (quint32 key) const
{
	return mKeys[key] != 0;
}



//----------------------------------------------------------------------------//
// Constructors                                                         Mouse //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////
/// <summary> Constructor instantiating this class. </summary>

Mouse::Mouse (void)
{
	mX = 0;
	mY = 0;

	mLeft   = false;
	mMiddle = false;
	mRight  = false;
}



//----------------------------------------------------------------------------//
// Accessors                                                            Mouse //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

quint32 Mouse::X (void) const
{
	return mX;
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

quint32 Mouse::Y (void) const
{
	return mY;
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

bool Mouse::Left (void) const
{
	return mLeft;
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

bool Mouse::Middle (void) const
{
	return mMiddle;
}

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

bool Mouse::Right (void) const
{
	return mRight;
}



//----------------------------------------------------------------------------//
// Static                                                               Mouse //
//----------------------------------------------------------------------------//

Mouse Mouse::mState;

////////////////////////////////////////////////////////////////////////////////
/// <summary> </summary>

Mouse *Mouse::State (void)
{
	int lMouseX, lMouseY;
	SDL_GetMouseState (&lMouseX, &lMouseY);

	mState.mX		= (quint32) lMouseX;
	mState.mY		= (quint32) lMouseY;
	mState.mLeft	= SDL_GetMouseState (NULL, NULL) & SDL_BUTTON (SDL_BUTTON_LEFT);
	mState.mMiddle	= SDL_GetMouseState (NULL, NULL) & SDL_BUTTON (SDL_BUTTON_MIDDLE);
	mState.mRight	= SDL_GetMouseState (NULL, NULL) & SDL_BUTTON (SDL_BUTTON_RIGHT);

	return &mState;
}
